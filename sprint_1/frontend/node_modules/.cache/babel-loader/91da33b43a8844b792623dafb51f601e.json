{"ast":null,"code":"var _jsxFileName = \"/Users/havok/KBProjects/sprint_1/frontend/src/Components/Initialtest.js\";\n//ES7+ React/Redux ... Search \"React\" in VSCode Extensions -> Type rafce in blank js file\nimport axios from 'axios';\nimport React, { useState, useEffect, Component } from 'react';\nimport './Initialtest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Initialtest extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.callAPI = async () => {\n      return axios.get('/test/get').then(res => {\n        this.res = res.data;\n        if (res.status !== 200) throw Error(res.message);\n        return res.data;\n      }).catch(err => {\n        //console.log(\"HII: \" + err)\n        alert(\"ERROR:\" + err);\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/test/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  /*when component first mounts onto website, run the following*/\n  componentDidMount() {\n    this.callAPI().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Initialtest\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CS180 Lab Connection Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Server POST Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this), \" \", this.state.response]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post to Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.post //<---? can work wthout\n          ,\n          onChange: e => this.setState({\n            post: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Server GET Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this), \" \", this.state.responseToPost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Initialtest;","map":{"version":3,"sources":["/Users/havok/KBProjects/sprint_1/frontend/src/Components/Initialtest.js"],"names":["axios","React","useState","useEffect","Component","Initialtest","state","response","post","responseToPost","callAPI","get","then","res","data","status","Error","message","catch","err","alert","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","text","setState","componentDidMount","express","console","log","render","target","value"],"mappings":"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","sourcesContent":["//ES7+ React/Redux ... Search \"React\" in VSCode Extensions -> Type rafce in blank js file\nimport axios from 'axios';\nimport React, { useState, useEffect, Component } from 'react';\nimport './Initialtest.css'\n\nclass Initialtest extends Component {\n    state = {\n        response: '',\n        post: '',\n        responseToPost: '',\n    };\n    \n    /*when component first mounts onto website, run the following*/\n    componentDidMount() {\n        this.callAPI()\n            .then(res => this.setState({ response: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callAPI = async () => {\n        return axios.get('/test/get')\n            .then(res => {\n                this.res = res.data\n                if (res.status !== 200) throw Error(res.message);\n                return res.data\n            })\n            .catch(err => {\n                //console.log(\"HII: \" + err)\n                alert(\"ERROR:\" + err)\n            })\n    };\n    \n    handleSubmit = async e => {\n        e.preventDefault();\n        const response = await fetch('/test/post', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: this.state.post }),\n        });\n        const body = await response.text();\n    \n        this.setState({ responseToPost: body });\n    };\n\n    render() {\n        return (\n            <div className=\"Initialtest\">\n                <header className=\"header\">\n                    <p>\n                    CS180 Lab Connection Test\n                    </p>\n                </header>\n                <p><em>Server POST Message:</em> {this.state.response}</p>\n                <form onSubmit={this.handleSubmit}>\n                    <p>\n                    <strong>Post to Server:</strong>\n                    </p>\n                    <input\n                    type=\"text\"\n                    value={this.state.post} //<---? can work wthout\n                    onChange={e => this.setState({ post: e.target.value })}\n                    />\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <p><em>Server GET Message:</em> {this.state.responseToPost}</p>\n            </div>\n        );\n    }\n}\n\nexport default Initialtest"]},"metadata":{},"sourceType":"module"}